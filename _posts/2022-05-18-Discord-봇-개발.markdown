---
layout: default
permalink: /posts/:year/:month/:day/:title/
modal-id: 3
img: discord.png
alt: image-alt
description: "·개요<br/>Python Discord 라이브러리를 활용하여 특정 게임에 특화된 유틸리티 봇과 랜덤 매칭 봇 총 2개의 봇을 현재 서비스 중. 각 봇은 1,000여 개의 서버 및 4천여 명의 사용자가 현재 이용 중<br/><br/>· 주요 기능<br/>① 특정 API 서버(게임 API 서버, OpenAI API 서버, 기상청 API 서버)와 통신하여 다양한 정보를 불러오는 기능<br/>② 사용자 입력 정보를 기반으로 랜덤하게 1:1 매칭 서비스를 제공하는 기능<br/><br/>· 기술 스택<br/>[백엔드]<br/>① Python Discord 라이브러리<br/>② EC2 & Naver Server<br/>③ SQLite & MySQL (AWS RDS)<br/><br/>· 느낀 점<br/>처음에는 단순히 편의성을 위해 개발을 시작했으나, 시간이 지나면서 기능이 추가되고 사용자가 늘어나면서 서비스 제공에 대한 책임감도 커졌습니다. 이 과정에서 특정 서비스를 제공할 때 QA의 필요성, 기능의 직관성, 예상치 못한 오류 발생 가능성, 트래픽 관리의 중요성 등 다양한 교훈을 얻었습니다. 또한, 개인 개발자로서 더 전문적인 개발 프로세스를 경험하기 위해 미흡하지만 GitHub을 통한 버전 관리, 업데이트 기록 작성, 사용자 문의 대응 등 팀에서 이루어지는 작업들을 시도해보며 실제 업무 수행 시 필요한 절차와 방법에 대해 고민할 기회가 되었습니다.<br/><br/>추가로, 비동기 프로그래밍에 대해서 더 깊게 알 수 있게 되는 계기가 되었습니다. 예를 들어, 현재 총 1000여개의 서버에서 봇이 동작하다 보니 특정 메시지를 보낼 때에 뒤로 갈수록 지연(5분 이상)이 발생하는 경우가 있었습니다. 이를 해결하기 위해 asyncio 라이브러리에 대해 더욱 깊게 탐구하였고 결국 지연을 효과적으로(30초 내) 줄일 수 있었습니다. 이런 경험은 매우 값지고 재미있게 느껴졌습니다.<br/><br/>· 배우고 싶은 점 및 아쉬운 점<br/>본 프로젝트 자체는 매우 흥미롭게 진행하고 있으나, 총 5개의 서버에서 봇을 관리하고 있었지만 Jenkins나 Kubernetes에 대한 지식이 부족하여 일일히 서버 변경점을 업로드 해야하는 점이 상당히 아쉬웠습니다. 이를 보완하기 위해 각 시스템에 대한 스터디를 진행 중에 있으나 해당 프로젝트에 할당할 수 있는 시간이 부족하여 여러가지 시스템 도입을 시도해보지 못 한다는 점이 더더욱 아쉽게 느껴졌습니다."
---