---
layout: default
permalink: /posts/:year/:month/:day/:title/
modal-id: 4
img: fastapi.png
alt: image-alt
description: "
<span style='color:#0000CD'>개요</span><br>
Python 웹 프레임워크인 FastAPI와 크로스 플랫폼인 Flutter를 활용한 쇼핑몰 어플리케이션<br>
<br>
<span style='color:#0000CD'>주요 기능</span><br>
① 기본적인 회원 관리 기능 (일반 로그인 및 소셜 로그인, 회원가입/탈퇴, 회원정보 변경 등)<br>
② 커뮤니티 기능 (댓글 및 답글, 좋아요, 차단, 신고 등)<br>
④ 결제 기능 (통합 결제 솔루션 활용 및 개선)<br>
④ 제품 정보 관련 기능 (제품 상세 페이지, 제품 등록, 리뷰, 문의 등)<br>
⑤ 검색 기능 (단순 키워드 기반 검색으로 구현하였지만, AWS Elasticsearch 도입을 위해 스터디 진행 중)<br>
<br>
<span style='color:#0000CD'>기술 스택</span><br>
[백엔드]<br>
① FastAPI & Nginx<br>
② Docker (Docker Compose)<br>
③ Mysql(AWS RDS)<br>
④ Redis<br>
⑤ AWS infra (SES, Route 53, S3, EC2, Loadbalancer)<br>
<br>
[프론트엔드]<br>
① Kotlin (Flutter로 리팩토링 진행)<br>
<br>
<span style='color:#0000CD'>느낀 점</span><br>
본 API 서버를 만들면서 백엔드쪽에 대한 지식을 다방면으로 향상시킬 수 있는 소중한 경험을 가질 수 있었습니다.<br>
<br>
비록 모든 과정을 독학으로 진행해 와서 아직 부족한 부분이 많지만, 이러한 경험을 통해 기존 시스템을 개선해 나가는 과정 자체가 큰 재미를 주고 있습니다.<br>
<br>
FastAPI라는 프레임워크를 처음 사용해 볼 수 있었던 프로젝트로, REST API 서버의 개념과 구조에 대해서 새롭게 알게되는 계기가 되었고, RESTful API에 대해서도 관심을 가지게 되어 이에 대해 더 공부해보게 되는 계기 또한 가질 수 있었습니다.<br>
<br>
<span style='color:#0000CD'>배우고 싶은 점 및 아쉬운 점</span><br>
다중 서버 관리를 보다 효율적으로 수행하기 위해 Jenkins와 Kubernetes를 도입하고 싶었지만, 우선적으로 기존 서버의 문제점 해결과 구조 개선에 집중하게 되었습니다. 이로 인해 이 두 시스템에 대한 깊은 이해를 하지 못한 것이 아쉽습니다. 현재 관련 스터디를 진행 중이며, 추후 이 시스템들을 더 깊게 이해하고 활용할 수 있기를 희망하고 있습니다."
---
